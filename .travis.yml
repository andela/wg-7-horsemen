language: python

# Cache the pip files
cache:
  directories:
    - $HOME/.cache/pip
    - $HOME/.nvm
    - node_modules
    - wger/node_modules

# Use container infrastructure
# http://blog.travis-ci.com/2014-12-17-faster-builds-with-container-based-infrastructure/
sudo: false

# Python versions to test
python:
  - "2.7"
  - "3.4"
  - "3.5"

# Manually define here the combinations environment variables to test
# https://github.com/travis-ci/travis-ci/issues/1519
env:
  - TEST_MOBILE=True  DB=postgresql TRAVIS_NODE_VERSION="4"
  - TEST_MOBILE=True  DB=sqlite     TRAVIS_NODE_VERSION="4"
  - TEST_MOBILE=False DB=postgresql TRAVIS_NODE_VERSION="4"
  - TEST_MOBILE=False DB=sqlite     TRAVIS_NODE_VERSION="4"

# Install the application
install:
  # Update nvm and set wanted Node version.
  # We update nvm using the script method instead of git, which is selected
  # automatically, as git won't work because the $HOME/.nvm is not a git
  # repository and the directory is not empty.
  - curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.31.4/install.sh | METHOD=script bash
  - . $HOME/.nvm/nvm.sh
  - nvm install $TRAVIS_NODE_VERSION
  - nvm use $TRAVIS_NODE_VERSION

  # Install requirements
  - pip install -r requirements_devel.txt
  - npm install
  - if [[ "$DB" = "postgresql" ]]; then pip install psycopg2; fi

  # Setup application
  - if [[ "$DB" = "sqlite" ]]; then invoke create_settings; fi
  - if [[ "$DB" = "postgresql" ]]; then invoke create_settings --database-type postgresql; fi

# Create test databases
before_script:
  - if [[ "$DB" = "postgresq" ]]; then psql -c 'DROP DATABASE IF EXISTS test_wger;' -U postgres; fi
  - if [[ "$DB" = "postgresql" ]]; then psql -c 'CREATE DATABASE test_wger;' -U postgres; fi

# Do the tests
script:
  # Formatting
  - pep8 wger

  # Javascript linting
  - gulp lint

  # Regular application
  - coverage run --source='.' ./manage.py test


  # Code coverage
  - coverage report

notifications:
  slack:
    secure: sHnlh2+tja8hwrsZdPkxCygZMVwlqSIKUIiTx3j/oJadn8z44yXzKmwZKUBEj0EZqQS5SG3FODvqPAnuL0rZcv5wUGhIHfAL8KFR8pgZoC55ybrTY6TqikBW7DP7jQ0EL1U2+VPa00hGlZ646jaBBhV+drQDho96gwTRxc+FSixD4Q9Aqy6lwFxN4l+S1DVWDpM1JUBLT1K02WF28HXNXeQbIx+F2D3EGbkApW+VhywchtvzujXWjOc2BE0RIt39YpL6ERwJYzHvq+b/YJa7r4Ce2axXWqd9Ld3ml+SkjZjTG7alvi/L6I00uzJnX1TjShVD14phCkP2mj9jv7g0fKDF5vQl67WyFEXAEHiow4mBV+90iUOFw3PSb4ePnorXaBL1M5aPygQiuUnabSR+IVdCjEXANx8mFVZ+leWhUspohG9SyRPaKjcN5cpaZYRURvXX8xQSHNYMfdBLalRij1omzwTxCuVeosX/+dNst8EbK1Kl3zJPG1I2tcpkxjJYe1qhecVbG95ySl0b30i0DMuu7mci5pKajzbgiQMu+mi/kuvNv6JPfMUQzNycXM7M4RIlrsNEbU8qiiGKHr8RmXbi89qq2vSMOlUMzckKx5JZ1bPSa0WKZgb86chpiUCVFHhnMvfE6tNnKIb+a0GwXIWlhl6fEtNhQ5oijbve+eg=
